package pattern_maining;

import java.io.BufferedReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class ReadWrite {
	BufferedReader br;
	static int itemSize, guestSize;
	int i, j, k;

	ReadWrite(BufferedReader br) {
		this.br = br;
	}

	List<List<Integer>> read() throws IOException {
		String buffer; String[] buffer_s; List<Integer> bl = new ArrayList<Integer>();
		i=0; j=0; k=0; List<List<Integer>> ll = new ArrayList<>();
		int max_item=0;

		while((buffer = br.readLine())!=null) { //ここですべての買い物籠を作成
			buffer_s = buffer.split(",");
			ll.add(new ArrayList<Integer>());
			List<Integer> l = ll.get(i);
			for(j=0; j<buffer_s.length; j++) l.add(Integer.parseInt(buffer_s[j]));
			if(max_item<j) max_j=j;
			i++;
		}
		guestSize = i;
		itemSize = max_j; // guestSizeはMineクラスで必要なためstaticで初期化
		return ll; //すべての買い物籠作成完了
	}

	void write(List<List<Integer>> ll) throws IOException {

		System.out.println();
		for(i=0; i<guestSize; i++) {
			System.out.print(ll.get(i));
			System.out.println();
		}
	}
}
